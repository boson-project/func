# Build and test all pull requests
name: Pull Requests

on: [pull_request]

jobs:
  integration-test:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
      - name: Install Binaries
        run: ./hack/binaries.sh
      - name: Allocate Cluster
        run: ./hack/allocate.sh
      - name: Configure Cluster
        run: ./hack/configure.sh
      - name: Local Registry an Routes (CI)
        run: ./hack/ci.sh
      - name: Run Echo Test
        run: ./hack/test.sh
      - name: Integration Test
        run: make test-integration

  e2e-test:
    needs: integration-test
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - name: Determine download URL for latest pkger
        id: pkger-download-url
        uses: actions/github-script@v2
        with:
          result-encoding: string
          script: |
            let platform = 'Linux_x86'
            return github.repos.getReleaseByTag({
                owner: "markbates",
                repo: "pkger",
                tag: "v0.17.1"
            }).then(result => {
                return result.data.assets
                  .filter(a => a.name.includes(platform))
                  .map(a => a.browser_download_url)[0];
            })
      - name: Install pkger
        run: |
          curl -s -L -o pkger.tgz ${{ steps.pkger-download-url.outputs.result }}
          tar xvzf pkger.tgz
      - name: Build
        run: make build
        env:
          PKGER: "./pkger"
      - name: Install Binaries
        run: ./hack/binaries.sh
      - name: Allocate Cluster
        run: ./hack/allocate.sh
      - name: Configure Cluster
        run: ./hack/configure.sh
      - name: Local Registry an Routes (CI)
        run: ./hack/ci.sh
      - name: Run Echo Test
        run: ./hack/test.sh
      - name: Patch Network Cluster
        run: ./test/patch_network.sh

      - name: E2E Test
        run: ./test/run_e2e_test.sh   # by default runs e2e + 'node' specific tests
      #- name: E2E Test Go
      #  run: ./test/run_e2e_test.sh go
      #- name: E2E Test Python
      #  run: ./test/run_e2e_test.sh python
      #- name: E2E Test Quarkus
      #  run: ./test/run_e2e_test.sh quarkus
      #- name: E2E Test Springboot
      #  run: ./test/run_e2e_test.sh springboot
